// <auto-generated />
using DjayLanguage.Core.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DjayLanguage.Core.EntityFramework.Migrations
{
    [DbContext(typeof(DjayDbContext))]
    [Migration("20230415115413_AddWordlists")]
    partial class AddWordlists
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.WordDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Antonyms")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Synonyms")
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.Property<string>("WordType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("WordDefinitions");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.WordExample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Example")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("WordDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordDefinitionId");

                    b.ToTable("WordExamples");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.WordGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("WordGroups");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.Wordlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("WordGroupId")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordGroupId");

                    b.HasIndex("WordId");

                    b.ToTable("Wordlists");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.WordDefinition", b =>
                {
                    b.HasOne("DjayLanguage.Core.EntityFramework.Word", "Word")
                        .WithMany("WordDefinitions")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.WordExample", b =>
                {
                    b.HasOne("DjayLanguage.Core.EntityFramework.WordDefinition", "WordDefinition")
                        .WithMany("WordExamples")
                        .HasForeignKey("WordDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordDefinition");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.Wordlist", b =>
                {
                    b.HasOne("DjayLanguage.Core.EntityFramework.WordGroup", "WordGroup")
                        .WithMany("Wordlists")
                        .HasForeignKey("WordGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DjayLanguage.Core.EntityFramework.Word", "Word")
                        .WithMany("Wordlists")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");

                    b.Navigation("WordGroup");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.Word", b =>
                {
                    b.Navigation("WordDefinitions");

                    b.Navigation("Wordlists");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.WordDefinition", b =>
                {
                    b.Navigation("WordExamples");
                });

            modelBuilder.Entity("DjayLanguage.Core.EntityFramework.WordGroup", b =>
                {
                    b.Navigation("Wordlists");
                });
#pragma warning restore 612, 618
        }
    }
}
